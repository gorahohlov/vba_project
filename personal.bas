Attribute VB_Name = "Module1"
Public vlookup_arg3 As Integer
Public vlookup_arg4 As Integer
Public vlookup_arg4_ver2 As Integer
Public vlookup_arg4_ver3 As Integer
Public upper_interval As Integer
Public lower_interval As Integer
Public processing_row_num As Integer
Public article_col_num As Integer
Public vlookup_table_rng As Range
Public cancel_flag As Boolean
Public sel_col_num As Integer

Sub highlight_codes_39()

'Данный макрос предназначен для выделения ячеек с кодами ТН ВЭД
'(10 знаков), которые попадают в Перечень товаров, которые должны
'декларироваться отдельным товаром в ДТ согласно Решению Коллегии
'ЕЭК №39 от 26.04.2012. "Товары, помещаемые под таможенную процедуру
'выпуска для внутреннего потребления, декларируются как один товар,
'только если товары имеют один товарный знак, марку, модель, артикул
'и обладают одинаковыми техническими и (или) коммерческими
'характеристиками."

'ПРИНЦИП работы.
'Пользователь выделяет произвольную область рабочего листа.
'В этой области могут быть любые данные: текст, числа, формулы, пустые
'ячейки и т.д. Значение ячеек сравнивается с кодами из Перечня. Если
'ячейка содержит код ТНВЭД из Перечня, такая ячейка выделяется
'контрастным форматированием. В дальнейшем используя это форматирование
'можно фильтровать ячейки, обрабатыать их и т.д. Все остальные значения
'выделенного диапазона игнорируются.

'ОСОБЕННОСТИ работы макроса, которые нужно иметь в виду.
'Макрос может выделять ячейки со значениями меньшими десяти знаков.
'Т.е. если ячейки содержат 4, 6, 9 и т.п. знаков - макрос тоже может
'их обработать и отметить контрастным форматированием. Но быть уверенным
'в корректном результате можно только там где стоят десятизначные коды!
'Т.к. в Перечне есть исключения и коды на уровне десяти знаков.

'СЛЕДУЕТ ИМЕТЬ В ВИДУ, что к выделенной области в процессе работы
'макроса применяется текстовый (строковый) формат. Т.е. там где стояли
'числовые значения, денежный, финансовый, форматы даты и прочие
'пользовательские форматы - такое форматирование удаляется - останется
'строковый формат (текст). Сами данные НЕ удаляются!

'Данные в формате даты "превращаются" в числа! Вернуть формат даты можно
'через "Формат Ячейки".

'Макрос выделит контрастным цветом все коды из товарной позиции 8523.
'Однако нужно помнить, что декларированию отдельным товаром в ДТ
'подлежат только "Носители готовые незаписанные" из 8523!

'Если у ячейки было какое-то форматирование (похожее, такое же или иное
'чем устанавливает макрос - любое) оно сохраняется! Т.е. если код
'несодержащийся в Перечне Решения №39 был форматирован контрасным цветом
'на манер как в этом макросе - оно сохраниться и ячейка будут выделена
'как будто она подлежит декларированию отдельным товаром.
'Поэтому будет хорошим тоном, перед началом применения данных макросов,
'очищать форматирование ячеек с кодами.

'Форматирование кодов по Перечню Решения Коллегии ЕЭК №39
'(декларирование одним товаром) - белый жирный шрифт, черный фон ячейки,
'оканктовка ячейки двойной рамкой.

'Форматирование кодов по Перечню Постановления Правительства №342
'(таможенны сбор 30000) - желтый фон ячейки, цвет шрифта авто,
'оканктовка двойной рамкой.

'Форматирование кодов, которые упоминаются в обоих перечнях - фиолетовый
'фон, белый шрифт, двойная белая рамка вокруг ячейки.

'Теперь процедура не обрабатывает скрытые (отфильтрованные) ячейки;
'Также процедура не "спотыкается" на ячейках содержащих ошибку.
'Ранее на ячейке с ошибкой возникало принудительное прерывание.
'Обрабатывать можно не только одноколоночный диапазон ячеек, но и
'произвольные несвязанные диапазоны ячеек.


    Dim rng As Range, cell As Range
    Dim arr_one As Variant, _
        arr_except As Variant, _
        var_except As Variant, _
        arr_04 As Variant, _
        arr_06 As Variant, _
        arr_08 As Variant, _
        arr_09 As Variant, _
        arr_10 As Variant
    Dim cond_01 As Boolean, _
        cond_02 As Boolean, _
        cond_03 As Boolean, _
        cond_04 As Boolean, _
        cond_05 As Boolean, _
        cond_06 As Boolean, _
        cond_07 As Boolean, _
        bool_01 As Boolean
    Dim t As Single

    t = Timer

    arr_one = Array("2204", "2710", "3403", "4011", "7321", "8414", _
                    "8415", "8418", "8421", "8422", "8423", "8427", _
                    "8429", "8430", "8443", "8450", "8452", "8467", _
                    "8470", "8471", "8472", "8476", "8508", "8509", _
                    "8510", "8513", "8515", "8516", "8517", "8518", _
                    "8519", "8521", "8523", "8524", "8525", "8526", _
                    "8527", "8528", "8542", "8703", "8903", "9005", _
                    "9006", "9007", "9008", "9014", "9015", "9101", _
                    "9102", "9207", "9504")

    arr_except = Array("8476900000", "8515900000", "8516900000", _
                       "8518900003", "8518900005", "8518900008", _
                       "8526100001", "8526920001", "8527212001", _
                       "8527215201", "8527215901", "8527290001", _
                       "9005900000", "9008900000", "9014900000", _
                       "9015900000")

    var_except = "851680"

    arr_04 = Array("2204", "4011", "8423", "8427", "8429", "8470", "8471", _
                   "8472", "8476", "8515", "8516", "8518", "8519", "8521", _
                   "8523", "8525", "8526", "8527", "8528", "8542", "9005", _
                   "9008", "9014", "9015", "9101", "9102", "9207")

    arr_06 = Array("732111", "841459", "841510", "841810", "841821", _
                   "841830", "841840", "841850", "844331", "844332", _
                   "844339", "845011", "845210", "846711", "846721", _
                   "846722", "846729", "890332", "890333")

    arr_08 = Array("84158100", "85241100", "85249100")

    arr_09 = Array("841460000", "841520000", "850819000", _
                   "851761000", "851762000", "900659000")

    arr_10 = Array("2710197100", "2710197500", "2710198200", "2710198400", _
                   "2710198600", "2710198800", "2710199200", "2710199400", _
                   "2710199800", "2710209000", "3403191000", "3403199000", _
                   "3403990000", "7321810000", "8414510000", "8415820000", _
                   "8415830000", "8418290000", "8421120000", "8422110000", _
                   "8422190000", "8430200000", "8450120000", "8450190000", _
                   "8450200000", "8452210000", "8452290000", "8467190000", _
                   "8467810000", "8467890000", "8508110000", "8508600000", _
                   "8509400000", "8509800000", "8510100000", "8510200000", _
                   "8510300000", "8513100000", "8517110000", "8517130000", _
                   "8517140000", "8517180000", "8517691000", "8703101100", _
                   "8903210000", "8903220000", "8903230000", "8903310000", _
                   "8903939900", "8903990000", "9006300000", "9006400000", _
                   "9007100000", "9007200000", "9504301000", "9504500001", _
                   "9504500002")

    For Each cell In Selection
        If Not cell.Rows.Hidden Then
            With cell
                a = .Value
                .NumberFormat = "General"
                .Value = a
                .NumberFormat = "@"
            End With
        End If
    Next

    Set rng = Selection

    For Each cell In rng

        If Not IsError(cell.Value) And _
           Not cell.Rows.Hidden Then
        If IsInArray(arr_one, Left(cell.Value, 4)) Then

            cond_01 = IsInArray(arr_04, Left(cell.Value, 4))
            cond_02 = IsInArray(arr_06, Left(cell.Value, 6))
            cond_03 = IsInArray(arr_08, Left(cell.Value, 8))
            cond_04 = IsInArray(arr_09, Left(cell.Value, 9))
            cond_05 = IsInArray(arr_10, Left(cell.Value, 10))
            cond_06 = IsInArray(arr_except, Left(cell.Value, 10))
            cond_07 = Left(cell.Value, 6) = var_except

            bool_01 = (cond_01 Or cond_02 Or cond_03 Or cond_04 Or cond_05) _
                      And _
                      (Not cond_06 And Not cond_07)

            If bool_01 Then

                With cell.Font
                    .Name = "Cambria"
                    .FontStyle = "обычный"
                    .Size = 9
                    .ThemeColor = xlThemeColorAccent4
                End With
                With cell.Borders
                    .LineStyle = xlDouble
                    .ThemeColor = 8
                End With
                cell.Interior.ThemeColor = xlThemeColorLight1
                cell.HorizontalAlignment = xlCenter
                cell.VerticalAlignment = xlTop

            End If

        End If
        End If

    Next cell

    t = Timer - t
    MsgBox "Готово." & " Время выполенния: " & Round(t, 1) & " sec"

End Sub

Private Function IsInArray( _
                           arr As Variant, _
                           match_code As Variant _
                          ) As Boolean

    IsInArray = False

    For Each Item In arr
        If Item = match_code Then
            IsInArray = True
            Exit For
        End If
    Next

End Function

Sub highlight_codes_342()

    Dim arr_342_position As Variant, _
        var_342_04 As Variant, _
        arr_342_06 As Variant, _
        arr_342_09 As Variant, _
        arr_342_10 As Variant
    Dim cond_08 As Boolean, _
        cond_09 As Boolean, _
        cond_10 As Boolean, _
        cond_11 As Boolean, _
        bool_02 As Boolean
    Dim rng As Range, cell As Range
    Dim t As Single


    t = Timer

    arr_342_position = Array("8443", "8471", "8473", "8517", "8518", "8519", _
                             "8521", "8523", "8525", "8526", "8527", "8528", _
                             "8531", "8536", "8544", "9006", "9007", "9008", _
                             "9010", "9012", "9014", "9015", "9016", "9017", _
                             "9024", "9025", "9026", "9027", "9028", "9029", _
                             "9030", "9031", "9032", "9101", "9102", "9104", _
                             "9106", "9504")

    var_342_04 = "8471"

    arr_342_06 = Array("844331", "844332", "847330", "847350", "851769", _
                       "851771", "851810", "851840", "851920", "851981", _
                       "851989", "852110", "852351", "852691", "852712", _
                       "852713", "852721", "852791", "852792", "852842", _
                       "852849", "852859", "852869", "852871", "852872", _
                       "853110", "853620", "900653", "901210", "901420", _
                       "901510", "901520", "901540", "901580", "901600", _
                       "901710", "901720", "902410", "902480", "902511", _
                       "902519", "902580", "902610", "902620", "902680", _
                       "902710", "902790", "902830", "902920", "903020", _
                       "903033", "903089", "903149", "903180", "903210")

    arr_342_09 = Array("851761000", "851762000", "851822000", "852190000", _
                       "852560000", "852610000", "852692000", "852729000", _
                       "900659000", "900669000", "902910000", "903039000", _
                       "910400000", "950450000")
    
    arr_342_10 = Array( _
                      "8517130000", "8517140000", "8518500000", "8519300000", _
                      "8527190000", "8527990000", "8528730000", "8544700000", _
                      "9006300000", "9006400000", "9007100000", "9007200000", _
                      "9008500000", "9010500000", "9010600000", "9014100000", _
                      "9014800000", "9027200000", "9027300000", "9027500000", _
                      "9028100000", "9028200000", "9030100000", "9030310000", _
                      "9030400000", "9031200000", "9031410000", "9032200000", _
                      "9032810000", "9032890000", "9101910000", "9102120000", _
                      "9102190000", "9102910000", "9106100000", "9106900000" _
                      )

    For Each cell In Selection
        If Not cell.Rows.Hidden Then
            With cell
                a = .Value
                .NumberFormat = "General"
                .Value = a
                .NumberFormat = "@"
            End With
        End If
    Next

    Set rng = Selection

    For Each cell In rng

        If Not IsError(cell.Value) And _
           Not cell.Rows.Hidden Then
        If IsInArray(arr_342_position, Left(cell.Value, 4)) Then

            cond_08 = Left(cell.Value, 4) = var_342_04
            cond_09 = IsInArray(arr_342_06, Left(cell.Value, 6))
            cond_10 = IsInArray(arr_342_09, Left(cell.Value, 9))
            cond_11 = IsInArray(arr_342_10, Left(cell.Value, 10))

            bool_02 = cond_08 Or cond_09 Or cond_10 Or cond_11

            If bool_02 Then

                With cell.Font
                    .Name = "Cambria"
                    .FontStyle = "обычный"
                    .Size = 9
                    .ThemeColor = xlThemeColorDark1
                End With
                With cell.Borders
                    .LineStyle = xlDouble
                    .ThemeColor = 1
                End With
                cell.Interior.Color = 10119167
                cell.HorizontalAlignment = xlCenter
                cell.VerticalAlignment = xlTop

            End If

        End If
        End If

    Next cell

    t = Timer - t
    MsgBox "Готово." & " Время выполенния: " & Round(t, 1) & " sec"

End Sub

Sub highlight_cells()
Attribute highlight_cells.VB_ProcData.VB_Invoke_Func = "q\n14"

    Dim rng As Range, cell As Range
    Dim arr_one As Variant, _
        arr_except As Variant, _
        var_except As Variant, _
        arr_04 As Variant, _
        arr_06 As Variant, _
        arr_08 As Variant, _
        arr_09 As Variant, _
        arr_10 As Variant, _
        arr_342_position As Variant, _
        var_342_04 As Variant, _
        arr_342_06 As Variant, _
        arr_342_09 As Variant, _
        arr_342_10 As Variant
    Dim cond_01 As Boolean, cond_02 As Boolean, cond_03 As Boolean, _
        cond_04 As Boolean, cond_05 As Boolean, cond_06 As Boolean, _
        cond_07 As Boolean, cond_08 As Boolean, cond_09 As Boolean, _
        cond_10 As Boolean, cond_11 As Boolean, _
        bool_01 As Boolean, bool_02 As Boolean
    Dim t As Single, flg As Single


    t = Timer

    arr_one = Array("2204", "2710", "3403", "4011", "7321", "8414", _
                    "8415", "8418", "8421", "8422", "8423", "8427", _
                    "8429", "8430", "8443", "8450", "8452", "8467", _
                    "8470", "8471", "8472", "8476", "8508", "8509", _
                    "8510", "8513", "8515", "8516", "8517", "8518", _
                    "8519", "8521", "8523", "8524", "8525", "8526", _
                    "8527", "8528", "8542", "8703", "8903", "9005", _
                    "9006", "9007", "9008", "9014", "9015", "9101", _
                    "9102", "9207", "9504")

    arr_except = Array("8476900000", "8515900000", "8516900000", _
                       "8518900003", "8518900005", "8518900008", _
                       "8526100001", "8526920001", "8527212001", _
                       "8527215201", "8527215901", "8527290001", _
                       "9005900000", "9008900000", "9014900000", _
                       "9015900000")

    var_except = "851680"

    arr_04 = Array("2204", "4011", "8423", "8427", "8429", "8470", "8471", _
                   "8472", "8476", "8515", "8516", "8518", "8519", "8521", _
                   "8523", "8525", "8526", "8527", "8528", "8542", "9005", _
                   "9008", "9014", "9015", "9101", "9102", "9207")

    arr_06 = Array("732111", "841459", "841510", "841810", "841821", _
                   "841830", "841840", "841850", "844331", "844332", _
                   "844339", "845011", "845210", "846711", "846721", _
                   "846722", "846729", "890332", "890333")

    arr_08 = Array("84158100", "85241100", "85249100")

    arr_09 = Array("841460000", "841520000", "850819000", _
                   "851761000", "851762000", "900659000")

    arr_10 = Array("2710197100", "2710197500", "2710198200", "2710198400", _
                   "2710198600", "2710198800", "2710199200", "2710199400", _
                   "2710199800", "2710209000", "3403191000", "3403199000", _
                   "3403990000", "7321810000", "8414510000", "8415820000", _
                   "8415830000", "8418290000", "8421120000", "8422110000", _
                   "8422190000", "8430200000", "8450120000", "8450190000", _
                   "8450200000", "8452210000", "8452290000", "8467190000", _
                   "8467810000", "8467890000", "8508110000", "8508600000", _
                   "8509400000", "8509800000", "8510100000", "8510200000", _
                   "8510300000", "8513100000", "8517110000", "8517130000", _
                   "8517140000", "8517180000", "8517691000", "8703101100", _
                   "8903210000", "8903220000", "8903230000", "8903310000", _
                   "8903939900", "8903990000", "9006300000", "9006400000", _
                   "9007100000", "9007200000", "9504301000", "9504500001", _
                   "9504500002")

    arr_342_position = Array("8443", "8471", "8473", "8517", "8518", "8519", _
                             "8521", "8523", "8525", "8526", "8527", "8528", _
                             "8531", "8536", "8544", "9006", "9007", "9008", _
                             "9010", "9012", "9014", "9015", "9016", "9017", _
                             "9024", "9025", "9026", "9027", "9028", "9029", _
                             "9030", "9031", "9032", "9101", "9102", "9104", _
                             "9106", "9504")

    var_342_04 = "8471"

    arr_342_06 = Array("844331", "844332", "847330", "847350", "851769", _
                       "851771", "851810", "851840", "851920", "851981", _
                       "851989", "852110", "852351", "852691", "852712", _
                       "852713", "852721", "852791", "852792", "852842", _
                       "852849", "852859", "852869", "852871", "852872", _
                       "853110", "853620", "900653", "901210", "901420", _
                       "901510", "901520", "901540", "901580", "901600", _
                       "901710", "901720", "902410", "902480", "902511", _
                       "902519", "902580", "902610", "902620", "902680", _
                       "902710", "902790", "902830", "902920", "903020", _
                       "903033", "903089", "903149", "903180", "903210")

    arr_342_09 = Array("851761000", "851762000", "851822000", "852190000", _
                       "852560000", "852610000", "852692000", "852729000", _
                       "900659000", "900669000", "902910000", "903039000", _
                       "910400000", "950450000")

    arr_342_10 = Array( _
                      "8517130000", "8517140000", "8518500000", "8519300000", _
                      "8527190000", "8527990000", "8528730000", "8544700000", _
                      "9006300000", "9006400000", "9007100000", "9007200000", _
                      "9008500000", "9010500000", "9010600000", "9014100000", _
                      "9014800000", "9027200000", "9027300000", "9027500000", _
                      "9028100000", "9028200000", "9030100000", "9030310000", _
                      "9030400000", "9031200000", "9031410000", "9032200000", _
                      "9032810000", "9032890000", "9101910000", "9102120000", _
                      "9102190000", "9102910000", "9106100000", "9106900000" _
                      )

    For Each cell In Selection
        If Not cell.Rows.Hidden Then
            With cell
                a = .Value
                .NumberFormat = "General"
                .Value = a
                .NumberFormat = "@"
            End With
        End If
    Next

    Set rng = Selection

    For Each cell In rng

        If Not IsError(cell.Value) And _
           Not cell.Rows.Hidden Then
        If IsInArray(arr_one, Left(cell.Value, 4)) Or _
           IsInArray(arr_342_position, Left(cell.Value, 4)) Then

            cond_01 = IsInArray(arr_04, Left(cell.Value, 4))
            cond_02 = IsInArray(arr_06, Left(cell.Value, 6))
            cond_03 = IsInArray(arr_08, Left(cell.Value, 8))
            cond_04 = IsInArray(arr_09, Left(cell.Value, 9))
            cond_05 = IsInArray(arr_10, Left(cell.Value, 10))
            cond_06 = IsInArray(arr_except, Left(cell.Value, 10))
            cond_07 = Left(cell.Value, 6) = var_except

            bool_01 = (cond_01 Or cond_02 Or cond_03 Or cond_04 Or cond_05) _
                      And _
                      (Not cond_06 And Not cond_07)

            cond_08 = Left(cell.Value, 4) = var_342_04
            cond_09 = IsInArray(arr_342_06, Left(cell.Value, 6))
            cond_10 = IsInArray(arr_342_09, Left(cell.Value, 9))
            cond_11 = IsInArray(arr_342_10, Left(cell.Value, 10))

            bool_02 = cond_08 Or cond_09 Or cond_10 Or cond_11

            flg = IIf(bool_01 = True And bool_02 = False, 1, _
                    IIf(bool_01 = False And bool_02 = True, 2, _
                        IIf(bool_01 = True And bool_02 = True, 3, 0)))

            Select Case flg
                Case 1

                    With cell.Font
                        .Name = "Cambria"
                        .FontStyle = "обычный"
                        .Size = 9
                        .Bold = True
                        .Color = vbWhite
                    End With
                    With cell.Borders
                        .LineStyle = xlDouble
                        .Color = vbWhite
                    End With
                    cell.Interior.ThemeColor = xlThemeColorLight1
                    cell.HorizontalAlignment = xlCenter
                    cell.VerticalAlignment = xlTop

                Case 2

                    With cell.Font
                        .Name = "Cambria"
                        .FontStyle = "обычный"
                        .Size = 9
                        .Bold = True
                        .ColorIndex = xlAutomatic
                    End With
                    With cell.Borders
                        .LineStyle = xlDouble
                        .Color = vbBlack
                    End With
                    cell.Interior.Color = vbYellow
                    cell.HorizontalAlignment = xlCenter
                    cell.VerticalAlignment = xlTop

                Case 3

                    With cell.Font
                        .Name = "Cambria"
                        .FontStyle = "обычный"
                        .Size = 9
                        .Bold = True
                        .Color = vbWhite
                    End With
                    With cell.Borders
                        .LineStyle = xlDouble
                        .ThemeColor = 1
                    End With
                    cell.Interior.Color = RGB(147, 75, 201)
                    cell.HorizontalAlignment = xlCenter
                    cell.VerticalAlignment = xlTop

            End Select

        End If
        End If

    Next cell

    t = Timer - t
    MsgBox "Готово." & " Время выполенния: " & Round(t, 1) & " sec"

End Sub

Sub partial_match()
Attribute partial_match.VB_ProcData.VB_Invoke_Func = "Й\n14"

'Процедура поиска и подтягиваня значений по частичному
'совпадению артикула. По сути это несколько измененная функциональность
'функции ВПР (VLookUp). Т.е. работает как ВПР только позволяет обрезать
'артикулы (значения по которым ведется поиск, сопоставление диапазонов)
'до какого-то количества знаков.

'Главные отличия данной процедуры (partial_match) от
'   встроенной функции ВПР():
'а) Произвольный порядок полей (колонок) с данными из таблицы Источник
'   данных, т.е. где мы будем искать совпадения и откуда будем
'   подгружать данные в случае совпадения ключевого поля;
'   Нет требования чтобы поле, по которому ищуться совпадения, обязано
'   быть в крайнем левом ряду диапазона Источника данных;
'б) Из таблицы Источника данных можно за раз выбрать данные из
'   произвольных одного, двух или трех столбцов (колонок).
'   Для этого достаточно перед вызовом процедуры выделить диапазон ячеек
'   состоящий из одного, двух или трех столбцов.
'в) Реализован цикл последовательного поиска совпадений по части
'   артикула (или иного ключевого поля) - согласно переданных
'   параметров; При чем этот процесс может быть итерационным.
'   Т.е. полученные значимые данные можно скрыть (отфильтровать), а
'   оставщиеся ячейки обработать с другими параметрами и настройками.
'   При это скрытые (отфильтрованные) строки, ячейки обрабатываться
'   вновь уже не будут.
'г) Данная подпрограмма это процедура, не функция, поэтому она может
'   выполнять не только вычисления, но и выполнять иные операции над
'   объектами (диапазонами, ячейками, etc).
'д) Преимущество встроенной функции ВПР() перед данной процедурой -
'   быстродействие. Все эти используемые мной циклы For и простой,
'   незатейливый, последовательный перебор значений - очень медленые.
'   Не выдерживает конкуренции с более мощными алгоритмами в функции
'   ВПР(). Я не уверен есть ли у прикладного разработчика VBA средства
'   повысить быстродействие, возможность испльзования иных
'   алгоритмических методов. Это все выходит за пределы данной задачи.
'На этом вроде отличия закончились.

'Должно быть очевидно, что несмотря на то, что в пользовательской форме
'запрашиваются номера колонок с "артикулом", "кодом ТНВЭД", "описанием
'31 графы", "описанием артикула" - должно быть ясно, что с помощью этой
'процедуры и пользовательской формы можно подтягивать любые данные по
'любому подходящему ключевому полю (а не только по артикулу).

'Сначала процедура ищит совпадения (артикулов) по полному значению.
'Если не находит - запускается цикл поиска по частичному совпадению.

'У пользователя запрашивается количество значимых символов артикула
'(например 9) и последовательно ищутся совпадения по количеству
'символов 9, 8, 7, 6 - на глубину не более 4 символов.

'Позже изменил функциональность. В пользовательской форме запрашивается,
'кроме всего прочего - количество значимых символов артикула по которым
'будет искться совпадения (число "от" и число "до"). Пользователь может
'настраивать их с помощью элементов управления - SpinButton или
'непосредственно вводить числовые значения в текстовоые поля.
'Т.е. "глубина" поиска совпадений по неполному артикулу может быть
'больше 4 символов. Количество символов "глубины" теперь настроиваемо,
'его можно указывать произвольно в пользовательской форме.

'Добавил функциональность чтобы процедура не обрабатывала скрытые или
'отфильтрованные строки. Это будет востребовано при множественном
'(итерационном) использовании процедуры.
'Сначала ищутся совпадения по полному артикулу.
'Далее найденные позиции фильтруются. Остальные строки обрабатываются
'по частичному поиску артикула (например с параметрами от 16 до 13).
'Далее отфильтровываются (скрываются) найденные позиции, а оставшиеся
'обрабатываются с другими параметрами, (допустим "от 12 до 8"). Скрытые
'(обработанные ранее) ячейки (строки) при этом не обрабатываются заново.

'Еще одна фича, добавленная позже - процедура не обрабатывает скрытые
'(отфильтрованные) строки, ячейки. Что удобно, поскольку после того как
'один раз отработала процедура - можно отфильтровать данные, по которым
'не подтянулись, не нашлись данные и обработать их этой же процедурой,
'но с другими параметрами. При этом ранее обработанные ячейки не
'обрабатываются вновь.

'Если процедура не находит в источнике данных совпадений в
'соответствующей ячейке сохраняется значение ошибки xlErrNA, с помощью
'функции CVErr(); Функция IsError() выдает значение True на любую
'ошибку xlErrValue, xlErrNA, xlErrRef, xlErrNull, xlErrName, xlErrDiv0,
'xlErrNum; если нужно чтобы функция реагировала исключительно на
'ошибку xlErrNA - нужно что-то придумывать, потому что включить в
'условие такую инструкцию: hscode = CVErr(2042) не получится - такая
'инструкция выдаст ошибку, если hscode не будет иметь значение ошибки,
'а будет, например содержать значение литерала, etc.
'Решение здесь будет очень простое. Сначала проверяем является ли
'переменная ошибкой (например, [IsError(hscode)] или
'конструкция [TypeName(hscode) = "Error"]), а потом, если убедились что
'переменная содержит ошибку - [IF hscode = CVErr(2042) Then etc].

'Что касается элемента управления для ввода и обработки ссылок - поля
'RefEdit на пользовательской форме - здесь можно сказать следующее.
'Этот элемент управления проектировался (компанией Microsoft) как аналог
'встроенному средству редактирования ссылок в приложении Excel. Однако
'нужно сказать, что этот элемент управления далек от идеала. Что стало
'даже притчей во языцех, об изъянах и многочисленных проблемах
'использования этого элемента написано даже в книгах по Excel и VBA.
'Это не моя недоработка. Я как мог пытался исправить его недостатки.
'Именно по этой причине вначале для получения ссылок на ячейки
'используется метод InputBox; а потом добавляются в поля RefEdit на
'пользовательской форме. Очевидные проблемы с этим типом элементов
'управления выражаются в невозможности использовать клавиатуру и клавиши
'для выделения диапазона, только мышь; в других случаях попытка
'использовать клавиатуру выливается в затейливейшие телодвижения с
'клавишами и т.п. В частности:
'"Элемент управления RefEdit не позволяет использовать специальные
'клавиши при выделении диапазона. Кроме того, после щелчка мышью на
'маленькой кнопке в правой части элемента управления (для временного
'сокрытия диалогового окна) можно применять только выделения с помощью
'мыши. Клавиатуру в этом случае применять нельзя." и т.п.
'Одним словом мороки с полями RefEdit хватает.
'Убедиться в этом не заставит себя ждать. Нужно не разочаровываться.
'Следует держать себя в руках, сохранять спокойствие ... и сводить к
'минимуму редактирование диапазонов (ссылок) с помощью таких элементов
'(RefEdit).
'Стараться на всю катушку использовать для редактирования диапазовнов
'метод Application.InputBox предъявляемый в начале процедуры.

'Пользовательская форма поддерживает клавиатуру. Поля удобно обходить
'клавишей <Tab>. Кроме того для перехода к полям можно использовать
'клавиатурные сокращения - подписи полей содержат подчеркнутые буквы,
'которые можно использовать с нажатой клавишей <Alt>; Например,
'сочетание <Alt>+<"ф">, <Alt>+<"г"> etc, работают только русские буквы.
'Для клавиши <ОК> - сочетание <Alt>+<"к"> ("к" русская);
'Для клавиши <Отмена> - сочетание <Alt>+<"о">("о" русская);
'Важно! Чтобы можно было использовать комбинации клавиш для переключения
'между полями требуется чтобы пользовательская форма запускалась при
'актуальнйой русской раскладке клавиатуры, если переключить на русский
'позже (уже после загрузки в память пользовательской формы) комбинации
'клавиш работать все равно не будут.

'Что касается вопросов установки, перенесения на другие компьютеры.
'Это не монолитная процедура. Она состоит из основной подпрограммы под
'назаванием partial_match и нескольких вспомогательных процедур и
'функций (которые требуют установки зависимостей), а также глобальных
'переменных, область действия которых должен быть весь проект.
'Копирование этой функциональности на другой компьютер требует внесение
'изменений в настроеки приложения (Excel) и в настроеки редактора VBE
'(Visual Basic Editor). Подробнее напишу позже.


    Dim article_col_rng As Range
    Dim counter1 As Long
    Dim counter2 As Integer
    Dim hscode As Variant, _
        description_31 As Variant, _
        description_art As Variant
    Dim t As Single
    Dim working_wbook_name As Variant
    Dim working_sheet_name As Variant
    Dim article_length As Integer
    Dim upper_ As Integer, lower_ As Integer


    working_wbook_name = ActiveWorkbook.Name
    working_sheet_name = ActiveSheet.Name
    
    On Error Resume Next

    Set article_col_rng = Application.InputBox("Введите колонку с признаком," _
                    & " по которому будем осуществлять поиск", _
                    "Ввод колонки с искомыми данными (артикулами)", Type:=8)
    If Err.Number <> 0 Then Set article_col_rng = ActiveCell.Offset(0, -1)
    On Error GoTo -1
    
    Set vlookup_table_rng = Application.InputBox("Введите диапазон откуда " _
                    & "требуется подгрузить данные", _
                    "Ввод диапазона (откуда будем получать данные)", Type:=8)
    If Err.Number <> 0 Then Set vlookup_table_rng = ActiveCell.Offset(0, -1)
    
    On Error GoTo 0

    Windows(working_wbook_name).Activate
        
    processing_row_num = Selection.Row
    article_col_num = article_col_rng.Column
    sel_col_num = Selection.Columns.Count
    
    UserForm1.Show
    
    Workbooks(working_wbook_name).Sheets(working_sheet_name).Activate
    
    If cancel_flag Then
        MsgBox "Процедура прервана пользователем."
        Exit Sub
    End If
    
    t = Timer

    For counter1 = 1 To Selection.Count Step Selection.Columns.Count
        rw_num = Application.WorksheetFunction.RoundUp(counter1 _
                                        / Selection.Columns.Count, 0)
        If Not Selection.Rows(rw_num).Hidden Then
        hscode = VLookUp4( _
                        Cells(processing_row_num, article_col_num), _
                        vlookup_table_rng, _
                        vlookup_arg3, _
                        vlookup_arg4, _
                        0 _
                        )
        If Not IsError(hscode) And sel_col_num > 1 Then
            description_31 = LCase( _
                        VLookUp4( _
                            Cells(processing_row_num, article_col_num), _
                            vlookup_table_rng, _
                            vlookup_arg3, _
                            vlookup_arg4_ver2, _
                            0) _
                                  )
            If sel_col_num > 2 Then
                description_art = LCase( _
                        VLookUp4( _
                            Cells(processing_row_num, article_col_num), _
                            vlookup_table_rng, _
                            vlookup_arg3, _
                            vlookup_arg4_ver3, _
                            0) _
                                       )
            End If
        Else
            description_31 = CVErr(xlErrNA)
            description_art = CVErr(xlErrNA)
        End If
        
        If IsError(hscode) Then
            
            article_length = Len(Cells(processing_row_num, article_col_num))
            If article_length >= upper_interval Then
                upper_ = upper_interval
                lower_ = lower_interval
            ElseIf article_length < upper_interval And _
                   article_length >= lower_interval Then
                upper_ = article_length
                lower_ = lower_interval
            ElseIf article_length < lower_interval Then
                upper_ = article_length
                lower_ = article_length
            End If

            For counter2 = upper_ To lower_ Step -1
                hscode = VLookUp4( _
                            Cells(processing_row_num, article_col_num), _
                            vlookup_table_rng, _
                            vlookup_arg3, _
                            vlookup_arg4, _
                            counter2 _
                            )
                
                If Not IsError(hscode) And sel_col_num > 1 Then
                    description_31 = LCase( _
                        VLookUp4( _
                                Cells(processing_row_num, article_col_num), _
                                vlookup_table_rng, _
                                vlookup_arg3, _
                                vlookup_arg4_ver2, _
                                counter2 _
                                ) _
                                          )
                    If sel_col_num > 2 Then
                        description_art = LCase( _
                            VLookUp4( _
                                Cells(processing_row_num, article_col_num), _
                                vlookup_table_rng, _
                                vlookup_arg3, _
                                vlookup_arg4_ver3, _
                                counter2 _
                                ) _
                                               )
                    End If
                Else
                    description_31 = CVErr(xlErrNA)
                    description_art = CVErr(xlErrNA)
                End If
        
                If Not IsError(hscode) Then
                    Select Case counter2
'                       альтернативные заливки (оттенки коричневого):
'                       13819376, 11321572, 08823768, 04025277
'                       альтернативные заливки (оттенки зеленого):
'                       14348258, 11854022, 09359529, 03506772, 02315831
                        Case upper_ - 0
                            Call paint_cells( _
                                             Selection.Columns.Count, _
                                             14348258, _
                                             counter1 _
                                            )
                        Case upper_ - 1
                            Call paint_cells( _
                                             Selection.Columns.Count, _
                                             11854022, _
                                             counter1 _
                                            )
                        Case upper_ - 2
                            Call paint_cells( _
                                             Selection.Columns.Count, _
                                             9359529, _
                                             counter1 _
                                            )
                        Case upper_ - 3
                            Call paint_cells( _
                                             Selection.Columns.Count, _
                                             3506772, _
                                             counter1 _
                                            )
                        Case 1 To upper_ - 4
                            Call paint_cells( _
                                             Selection.Columns.Count, _
                                             2315831, _
                                             counter1 _
                                            )
                    End Select

                    Exit For
                End If
        
            Next counter2
        
        End If
        
        Selection.Cells(counter1) = hscode
        If Selection.Columns.Count = 2 Then
            Selection.Cells(counter1 + 1) = description_31
        ElseIf Selection.Columns.Count > 2 Then
            Selection.Cells(counter1 + 1) = description_31
            Selection.Cells(counter1 + 2) = description_art
        End If
        
        End If
        processing_row_num = processing_row_num + 1
    Next counter1
    
    t = Timer - t
    MsgBox "Готово." & " Время выполенния: " & Round(t, 1) & " sec"
    
End Sub

Private Sub paint_cells( _
                        sel_col_cnt As Integer, _
                        color_index_val As Long, _
                        cell_pointer As Long _
                       )

    
    Dim fnt_clr As Long


    If color_index_val = 14348258 Or _
       color_index_val = 11854022 Or _
       color_index_val = 9359529 Then
                fnt_clr = vbBlack
    ElseIf color_index_val = 3506772 Or _
           color_index_val = 2315831 Then
                fnt_clr = vbWhite
    End If


    With Selection.Cells(cell_pointer)
        .Font.Name = "Cambria"
        .Font.Size = 8
        .Font.Color = fnt_clr
        .Interior.Color = color_index_val
    End With
    
    If sel_col_cnt = 2 Then
        
        With Selection.Cells(cell_pointer + 1)
            .Font.Name = "Cambria"
            .Font.Size = 9
            .Font.Color = fnt_clr
            .Interior.Color = color_index_val
        End With
    
    ElseIf sel_col_cnt >= 3 Then
        
        With Selection.Cells(cell_pointer + 1)
            .Font.Name = "Cambria"
            .Font.Size = 9
            .Font.Color = fnt_clr
            .Interior.Color = color_index_val
        End With
        
        With Selection.Cells(cell_pointer + 2)
            .Font.Name = "Cambria"
            .Font.Size = 9
            .Font.Color = fnt_clr
            .Interior.Color = color_index_val
        End With
    
    End If

End Sub

Public Sub cells_numbering()

'Процедура позволяет нумеровать строки диапазона, в котором некоторые
'строки скрыты (отфильтрованы). Нумерация производится только
'отображаемых (нескрытых) строк. Номера отобраемых строк вставляются
'как значения, т.е. после удаления фильтра или отображения всех
'строк - сделанная нумерация не меняется, не пересчитывается.
'Это намеренное свойство (feature) процедуры - чтобы нумерация
'не сбивалась при изменении фильтра, скрытия или отображения строк.
'Если нужен адаптивный фильтр - лучше для таких случаев использовать
'формулы (АГРЕГАТ, ПРОМЕЖУТОЧНЫЕ.ИТОГИ(СРЁТЗ;...) и т.д.)

'Нумерация начинается со значения, которе содержится в левой верхней
'ячейке выделенного диапазона; Если в этой ячейке содержатся текстовые
'значения или значения даты или пустое значение или значение меньше
'единицы, отрицательные значения -  тогда нумерация начинается
'с 1 (единицы).

'Использование макроса.
'Нужно выделить диапазон и вызвать макрос. Все отображаемые (нескрытые)
'строки диапазона будут пронумерованы по порядку - с единицы или
'начиная с числового значения в левой верхней ячейке диапазона.
'Пронумерована будет только левая колонка выделенного диапазона,
    
'одна ячейка - будет пронумерована только она по правилам описанным
'выше (учитывая формат и значение содержащееся в ячейке).


       
    Dim i As Long, n As Long
       
    If IsNumeric(Selection.Cells(1, 1)) And _
            Not IsEmpty(Selection.Cells(1, 1)) And _
            Not Selection.Cells(1, 1) < 1 Then
        n = Selection.Cells(1).Value
    Else: n = 1
    End If
       
    For i = 1 To Selection.Rows.Count
        If Not Selection.Rows(i).Hidden Then
            Selection.Cells(i, 1) = n: n = n + 1
        End If
    Next
    
End Sub
